'Bayley Scales of Infant Development III' = 'Bayley III',
'Pediatric Stroke Outcome Measure (PSOM) ' = 'PSOM',
'Scales  for  Outcomes  in  PD  (SCOPA)' = "SCOPA",
"Unified  Huntington  Disease  Rating  Scale" = "UHDRS",
"UPDRS" = "UPDRS (composite)",
"Total motor scale (TMS)" = "TMS",
"medical research council ( MRC) sum score" = "MRC sum score",
"GBS disability score" = "GBS disability scale",
"GBS  disability  scale" = "GBS disability scale",
"Pediatric Stroke Outcome Measure (PSOM)" = "PSOM",
"GOS" = "GOS (unextended)")
)  |>
mutate(
outcome2 = recode(outcome2,
" Gross Motor Function Classification System (GMFCS)" = "GMFCS",
"UPDRS-III" = "UPDRS-III",
"MSSS" = "MSSS",
"mRS" = "mRS",
"NIHSS" = "NIHSS",
" PSOM" = "PSOM",
" total functional capacity (TFC)" = "TFC",
" UPDRS-III" = "UPDRS-III",
"Barthel Index" = "Barthel Index",
"ICARS" = "ICARS",
"mNIHSS" = "mNIHSS",
" NIHSS" = " NIHSS",
" Katz index" = "Katz index",
" Rasch- Built  Overall Built Disability Score" = "Rasch-Built Overall Built Disability Score",
" medical research council ( MRC) sum score" = "Medical Research Council (MRC) sum score",
" GDS" = "GDS",
"Multiple Sclerosis Severity Score (MSSS)" = "MSSS",
" PCPC" = " PCPC",
"Stroke Levity Scale" = "Stroke Levity Scale",
" SCIM 3" = "SCIM 3"),
outcome2 = if_else(
outcome2 == "", NA_character_, outcome2)
) |>
mutate(
outcome3 = recode(outcome3,
"INAS" = "INAS",
"Stroke Impact Scale 16" = "Stroke Impact Scale 16",
"SIS-16" = "Stroke Impact Scale 16"),
outcome3 = if_else(
outcome3 == "", NA_character_, outcome3)
) |>
# standardize formatting of roc/auc variable
mutate(
roc_present = str_replace_all(
roc_present, ";", "")
) |>
mutate(
roc_present = recode(
roc_present,
"AUC" = "auc",
"AUCROC" = "auc_roc",
"ROCAUC" = "auc_roc",
"Neither" = "neither"),
roc_present_bin = case_when(
roc_present == "auc" ~ "Yes",
roc_present == "aucroc" ~ "Yes",
roc_present == "neither" ~ "No")
) |>
separate(
effect_estimate,
into = c("effectmeasure1",
"effectmeasure2",
"effectmeasure3"),
sep = ";",
fill = "right",
remove = FALSE) |>
# standardize formatting of effect estimate variable
mutate(
effectmeasure1 = recode(
effectmeasure1,
"partial correlation r" = "Partial correlation r",
"pearson correlation r" = "Pearson correlation r"),
effectmeasure2 = str_remove(effectmeasure2, "^ "),
effectmeasure2 = recode(
effectmeasure2,
"risk ratio" = "Risk ratio",
"odds ratio" = "Odds ratio"),
effectmeasure2 = if_else(
effectmeasure2 == "", NA_character_, effectmeasure2),
effectmeasure3 = str_remove(effectmeasure3, "^ "),
effectmeasure3 = if_else(
effectmeasure3 == "", NA_character_, effectmeasure3),
effectmeasure3 = recode(
effectmeasure3,
"mean difference" = "Mean difference")
) |>
# create a binary variable for whether a row only contains a beta coefficient
mutate(
beta_only_bin = case_when(
effect_estimate == "Beta coefficient(s) only" ~ "Yes",
effect_estimate == "Beta coefficient(s) only;" ~ "Yes",
TRUE ~ "No")
) |>
# create a binary variable for whether an observation is in the primary sample or only overall sample
mutate(
refined_bin = case_when(
roc_present == "neither" & covariate_intent == "Yes" & beta_only_bin == "No" ~ "refined",
TRUE ~ "overall_only")
) |>
mutate(
spbg_type_3cat = case_when(
spbg_present == "No" ~ "No Grotta bars",
contains_adj_spbg == "No" ~ "Unadjusted Grotta bars only",
contains_adj_spbg == "Yes" ~ "Contains adjusted Grotta bars"),
spbg_type_3cat = fct_relevel(
spbg_type_3cat,
"No Grotta bars",
"Unadjusted Grotta bars only",
"Contains adjusted Grotta bars")
) |>
# remove unneeded variables
select(c("doi",
"condition1",
"condition2",
"outcome1",
"outcome2",
"outcome3",
"spbg_present",
"contains_adj_spbg",
"spbg_type_3cat",
"figure_other",
"roc_present",
"roc_present_bin",
"covariate_intent",
"effectmeasure1",
"effectmeasure2",
"effectmeasure3",
"beta_only_bin",
"refined_bin")
)
aucroc <-
dat_incl |>
filter(!roc_present == "neither") |>
select(doi)
beta_only <-
dat_incl |>
filter(beta_only_bin == "Yes") |>
select(doi)
aucroc <-
dat_incl |>
filter(roc_present_bin == "Yes") |>
select(doi)
beta_only <-
dat_incl |>
filter(beta_only_bin == "Yes") |>
select(doi)
table(Abstraction_master$roc_present)
table(dat_incl$roc_present)
# filter for only included studies
dat_incl <- Abstraction_master |>
filter(eligiblity == "Yes") |>
# create variable for spbg count per study
mutate(
spbg_count = case_when(
spbg_present == "No" ~ 0,
spbg_present == "Yes" & additional_spbg_1 == "No" ~ 1,
spbg_present == "Yes" & additional_spbg_1 == "Yes" & additional_spbg_2 == "No" ~ 2,
spbg_present == "Yes" & additional_spbg_1 == "Yes" & additional_spbg_2 == "Yes"  & additional_spbg_3 == "No" ~ 3,
spbg_present == "Yes" & additional_spbg_1 == "Yes" & additional_spbg_2 == "Yes" & additional_spbg_3 == "Yes" & additional_spbg_4 == "No" ~ 4,
spbg_present == "Yes" & additional_spbg_1 == "Yes" & additional_spbg_2 == "Yes" & additional_spbg_3 == "Yes" & additional_spbg_4 == "Yes" ~ 5)) |>
# create variable for records which contain an ADJUSTED spbg
mutate(
contains_adj_spbg = case_when(
spbg_present == "Yes" & c(adjusted_1 == "Yes" | adjusted_2 == "Yes" | adjusted_3 == "Yes" | adjusted_4 == "Yes" | adjusted_5 == "Yes") ~ "Yes",
spbg_present == "No" ~ NA,
spbg_count == 1 & adjusted_1 == "No" ~ "No",
spbg_count == 2 & c(adjusted_1 == "No" & adjusted_2 == "No") ~ "No",
spbg_count == 3 & c(adjusted_1 == "No" & adjusted_2 == "No" & adjusted_3 == "No") ~ "No",
spbg_count == 4 & c(adjusted_1 == "No" & adjusted_2 == "No" & adjusted_3 == "No" & adjusted_4 == "No") ~ "No",
spbg_count == 5 & c(adjusted_1 == "No" & adjusted_2 == "No" & adjusted_3 == "No" & adjusted_4 == "No" & adjusted_5 == "No") ~ "No")
) |>
# separate out neurological conditions by ;
separate(neurological_condition, into = c("condition1", "condition2"),
sep = ";",
fill = "right",
remove = TRUE) |>
# clean up names of neuropathologies
mutate(condition1 = recode(condition1,
"Stroke (all)" = "Stroke (all)",
"encephalitis" = "Encephalitis",
"GBS" = "Guillain-Barré",
"Huntington disease" = "Huntington’s disease",
"Huntington Disease" = "Huntington’s disease")
) |>
mutate(condition2 = if_else(
condition2 == "", NA_character_, condition2)
)|>
# separate out functional outcomes by ;
separate(functional_outcome, into = c("outcome1", "outcome2", "outcome3"),
sep = ";",
fill = "right",
remove = FALSE) |>
# standardize formatting of functional outcomes
mutate(
outcome1 = recode(outcome1,
'(KOSCHI) King’s Outcome Scale for Childhood Head Injury score' = 'KOSCHI',
'Bayley Scales of Infant Development III' = 'Bayley III',
'Pediatric Stroke Outcome Measure (PSOM) ' = 'PSOM',
'Scales  for  Outcomes  in  PD  (SCOPA)' = "SCOPA",
"Unified  Huntington  Disease  Rating  Scale" = "UHDRS",
"UPDRS" = "UPDRS (composite)",
"Total motor scale (TMS)" = "TMS",
"medical research council ( MRC) sum score" = "MRC sum score",
"GBS disability score" = "GBS disability scale",
"GBS  disability  scale" = "GBS disability scale",
"Pediatric Stroke Outcome Measure (PSOM)" = "PSOM",
"GOS" = "GOS (unextended)")
)  |>
mutate(
outcome2 = recode(outcome2,
" Gross Motor Function Classification System (GMFCS)" = "GMFCS",
"UPDRS-III" = "UPDRS-III",
"MSSS" = "MSSS",
"mRS" = "mRS",
"NIHSS" = "NIHSS",
" PSOM" = "PSOM",
" total functional capacity (TFC)" = "TFC",
" UPDRS-III" = "UPDRS-III",
"Barthel Index" = "Barthel Index",
"ICARS" = "ICARS",
"mNIHSS" = "mNIHSS",
" NIHSS" = " NIHSS",
" Katz index" = "Katz index",
" Rasch- Built  Overall Built Disability Score" = "Rasch-Built Overall Built Disability Score",
" medical research council ( MRC) sum score" = "Medical Research Council (MRC) sum score",
" GDS" = "GDS",
"Multiple Sclerosis Severity Score (MSSS)" = "MSSS",
" PCPC" = " PCPC",
"Stroke Levity Scale" = "Stroke Levity Scale",
" SCIM 3" = "SCIM 3"),
outcome2 = if_else(
outcome2 == "", NA_character_, outcome2)
) |>
mutate(
outcome3 = recode(outcome3,
"INAS" = "INAS",
"Stroke Impact Scale 16" = "Stroke Impact Scale 16",
"SIS-16" = "Stroke Impact Scale 16"),
outcome3 = if_else(
outcome3 == "", NA_character_, outcome3)
) |>
# standardize formatting of roc/auc variable
mutate(
roc_present = str_replace_all(
roc_present, ";", "")
) |>
mutate(
roc_present = recode(
roc_present,
"AUC" = "auc",
"AUCROC" = "auc_roc",
"ROCAUC" = "auc_roc",
"Neither" = "neither"),
roc_present_bin = case_when(
roc_present == "auc" ~ "Yes",
roc_present == "auc_roc" ~ "Yes",
roc_present == "neither" ~ "No")
) |>
separate(
effect_estimate,
into = c("effectmeasure1",
"effectmeasure2",
"effectmeasure3"),
sep = ";",
fill = "right",
remove = FALSE) |>
# standardize formatting of effect estimate variable
mutate(
effectmeasure1 = recode(
effectmeasure1,
"partial correlation r" = "Partial correlation r",
"pearson correlation r" = "Pearson correlation r"),
effectmeasure2 = str_remove(effectmeasure2, "^ "),
effectmeasure2 = recode(
effectmeasure2,
"risk ratio" = "Risk ratio",
"odds ratio" = "Odds ratio"),
effectmeasure2 = if_else(
effectmeasure2 == "", NA_character_, effectmeasure2),
effectmeasure3 = str_remove(effectmeasure3, "^ "),
effectmeasure3 = if_else(
effectmeasure3 == "", NA_character_, effectmeasure3),
effectmeasure3 = recode(
effectmeasure3,
"mean difference" = "Mean difference")
) |>
# create a binary variable for whether a row only contains a beta coefficient
mutate(
beta_only_bin = case_when(
effect_estimate == "Beta coefficient(s) only" ~ "Yes",
effect_estimate == "Beta coefficient(s) only;" ~ "Yes",
TRUE ~ "No")
) |>
# create a binary variable for whether an observation is in the primary sample or only overall sample
mutate(
refined_bin = case_when(
roc_present == "neither" & covariate_intent == "Yes" & beta_only_bin == "No" ~ "refined",
TRUE ~ "overall_only")
) |>
mutate(
spbg_type_3cat = case_when(
spbg_present == "No" ~ "No Grotta bars",
contains_adj_spbg == "No" ~ "Unadjusted Grotta bars only",
contains_adj_spbg == "Yes" ~ "Contains adjusted Grotta bars"),
spbg_type_3cat = fct_relevel(
spbg_type_3cat,
"No Grotta bars",
"Unadjusted Grotta bars only",
"Contains adjusted Grotta bars")
) |>
# remove unneeded variables
select(c("doi",
"condition1",
"condition2",
"outcome1",
"outcome2",
"outcome3",
"spbg_present",
"contains_adj_spbg",
"spbg_type_3cat",
"figure_other",
"roc_present",
"roc_present_bin",
"covariate_intent",
"effectmeasure1",
"effectmeasure2",
"effectmeasure3",
"beta_only_bin",
"refined_bin")
)
aucroc <-
dat_incl |>
filter(roc_present_bin == "Yes") |>
select(doi)
beta_only <-
dat_incl |>
filter(beta_only_bin == "Yes") |>
select(doi)
adj_confounding <-dat_incl |>
filter(covariate_intent == "Yes") |>
select(doi)
table(dat_incl$refined_bin)
View(Abstraction_master)
screening_master <- read.csv(file = url("https://raw.githubusercontent.com/meghanrforrest/SPBG-meta-research-study/main/all_screening-decisions..csv"))
screening_master <- read.csv(file = url("https://raw.githubusercontent.com/meghanrforrest/SPBG-meta-research-study/main/all_screening-decisions..csv"))
screening_master <- read.csv(file = url("https://raw.githubusercontent.com/meghanrforrest/SPBG-meta-research-study/main/all_screening-decisions..csv"))
pubmed_mar62024 <- read_csv("~/Desktop/Research Projects/SPBG/SPBG_data/pubmed_mar62024.csv")
View(pubmed_mar62024)
View(screening_master)
library(readr)
library(tidyverse)
View(pubmed_mar62024)
screening_master <- read.csv(file = url("https://raw.githubusercontent.com/meghanrforrest/SPBG-meta-research-study/main/all_screening-decisions..csv"))
pubmed_mar62024 <- read_csv("~/Desktop/Research Projects/SPBG/SPBG_data/pubmed_mar62024.csv")|>
rename(doi = DOI)
print(names(pubmed_mar62024))
print(names(screening_master))
combined_data <- merge(screening_master,
pubmed_mar62024,
by = "doi",
all.x = TRUE
)
View(combined_data)
na_observations <- combined_data[is.na(combined_data$doi), ]
print(names(na_observations))
na_doi <- na_observations |>
select("doi", "Journal/Book")
View(na_doi)
View(na_observations)
na_observations <- combined_data[is.na(combined_data$`Journal/Book`), ]
na_doi <- na_observations |>
select("doi", "Journal/Book")
View(na_doi)
View(na_observations)
na_doi <- na_observations |>
select("doi", "Journal/Book")
View(na_doi)
View(na_observations)
View(na_doi)
View(combined_data)
View(combined_data)
combined_data <-
combined_data |>
mutate(`Journal/Book` = case_when(
doi == 10.1093/brain/awab484 ~ Brain))
combined_data <-
combined_data |>
mutate(`Journal/Book` = case_when(
doi == "10.1093/brain/awab484" ~ "Brain"))
View(na_doi)
View(combined_data)
View(na_doi)
View(na_doi)
View(na_doi)
View(na_doi)
View(na_doi)
View(na_doi)
View(na_doi)
View(na_doi)
View(na_doi)
View(na_doi)
View(na_doi)
View(na_doi)
View(na_doi)
View(na_doi)
View(na_doi)
View(na_doi)
View(na_doi)
combined_data <- merge(screening_master,
pubmed_mar62024,
by = "doi",
all.x = TRUE
)
na_observations <- combined_data[is.na(combined_data$`Journal/Book`), ]
na_doi <- na_observations |>
select("doi", "Journal/Book")
combined_data <-
combined_data |>
mutate(`Journal/Book` = case_when(
doi == "10.1093/brain/awab484" ~ "Brain",
doi == "10.1161/STROKEAHA.119.027557" ~ "Stroke",
doi == "10.1212/WNL.0000000000011106" ~ "Neurology",
doi == "10.1212/WNL.0000000000011450" ~ "Neurology",
doi == "10.1212/WNL.0000000000012023" ~ "Neurology",
doi == "10.1212/WNL.0000000000011453" ~ "Neurology",
doi == "10.1212/WNL.0000000000012032" ~ "Neurology",
doi == "10.1212/WNL.0000000000012074" ~ "Neurology",
doi == "10.1212/WNL.0000000000012106" ~ "Neurology",
doi == "10.1212/WNL.0000000000012246" ~ "Neurology",
doi == "10.1212/WNL.0000000000012285" ~ "Neurology",
doi == "10.1212/WNL.0000000000012604" ~ "Neurology",
doi == "10.1212/WNL.0000000000013079" ~ "Neurology",
doi == "10.1212/WNL.0000000000013080" ~ "Neurology",
doi == "10.1212/WNL.0000000000013081" ~ "Neurology",
doi == "10.1212/WNL.0000000000013119" ~ "Neurology",
doi == "10.1212/WNL.0000000000013121" ~ "Neurology",
doi == "10.1212/WNL.0000000000013123" ~ "Neurology"))
d
print(unique(names(combined_data$`Journal/Book`)))
table(combined_data$`Journal/Book`)
View(combined_data)
View(pubmed_mar62024)
View(combined_data)
View(screening_master)
View(pubmed_mar62024)
table(pubmed_mar62024$`Journal/Book`)
View(combined_data)
combined_data <- merge(pubmed_mar62024,
screening_master,
by = "doi",
all.x = TRUE
)
View(combined_data)
View(combined_data)
combined_data <-
combined_data |>
mutate(`Journal/Book` = case_when(
doi == "10.1093/brain/awab484" ~ "Brain",
doi == "10.1161/STROKEAHA.119.027557" ~ "Stroke",
doi == "10.1212/WNL.0000000000011106" ~ "JAMA Neurol",
doi == "10.1212/WNL.0000000000011450" ~ "JAMA Neurol",
doi == "10.1212/WNL.0000000000012023" ~ "JAMA Neurol",
doi == "10.1212/WNL.0000000000011453" ~ "JAMA Neurol",
doi == "10.1212/WNL.0000000000012032" ~ "JAMA Neurol",
doi == "10.1212/WNL.0000000000012074" ~ "JAMA Neurol",
doi == "10.1212/WNL.0000000000012106" ~ "JAMA Neurol",
doi == "10.1212/WNL.0000000000012246" ~ "JAMA Neurol",
doi == "10.1212/WNL.0000000000012285" ~ "JAMA Neurol",
doi == "10.1212/WNL.0000000000012604" ~ "JAMA Neurol",
doi == "10.1212/WNL.0000000000013079" ~ "JAMA Neurol",
doi == "10.1212/WNL.0000000000013080" ~ "JAMA Neurol",
doi == "10.1212/WNL.0000000000013081" ~ "JAMA Neurol",
doi == "10.1212/WNL.0000000000013119" ~ "JAMA Neurol",
doi == "10.1212/WNL.0000000000013121" ~ "JAMA Neurol",
doi == "10.1212/WNL.0000000000013123" ~ "JAMA Neurol"))
library(readr)
library(tidyverse)
screening_master <- read.csv(file = url("https://raw.githubusercontent.com/meghanrforrest/SPBG-meta-research-study/main/all_screening-decisions..csv"))
pubmed_mar62024 <- read_csv("~/Desktop/Research Projects/SPBG/SPBG_data/pubmed_mar62024.csv")
combined_data <- merge(pubmed_mar62024,
screening_master,
by = "doi",
all.x = TRUE)
print(names(pubmed_mar62024))
pubmed_mar62024 <- read_csv("~/Desktop/Research Projects/SPBG/SPBG_data/pubmed_mar62024.csv") |>
rename("doi" = "DOI")
print(names(pubmed_mar62024))
combined_data <- merge(pubmed_mar62024,
screening_master,
by = "doi",
all.x = TRUE)
combined_data <- merge(pubmed_mar62024,
screening_master,
by = "doi",
all = TRUE)
missing_in_screening_master <- combined_data[is.na(doi), ]
new_dataset <- pubmed_mar62024 %>%
left_join(screening_master %>% select(doi, Journal/Book),
by = "doi")
new_dataset <- pubmed_mar62024 %>%
left_join(screening_master %>% select(doi, Journal/Book),
by = doi)
new_dataset <- pubmed_mar62024 %>%
left_join(screening_master %>% select(doi, `Journal/Book`),
by = doi)
new_dataset <- pubmed_mar62024 %>%
left_join(screening_master %>% select(doi, `Journal/Book`),
by = "doi")
